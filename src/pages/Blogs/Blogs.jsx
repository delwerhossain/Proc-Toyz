import { useEffect, useState } from "react";
import Loading from "../../Components/Loading/Loading";

const Blogs = () => {
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    if (loading) {
      setTimeout(() => {
        setLoading(false);
      }, 200);
    }
  }, []);

  return loading ? (
    <div className="grid justify-center items-center">
      <Loading></Loading>
    </div>
  ) : (
    <div className=" my-8 relative isolate overflow-hidden bg-white px-6 py-24 sm:py-32 lg:overflow-visible lg:px-0">
      <div className="absolute inset-0 -z-10 overflow-hidden">
        <svg
          className="absolute left-[max(50%,25rem)] top-0 h-[64rem] w-[128rem] -translate-x-1/2 stroke-gray-200 [mask-image:radial-gradient(64rem_64rem_at_top,white,transparent)]"
          aria-hidden="true"
        >
          <defs>
            <pattern
              id="e813992c-7d03-4cc4-a2bd-151760b470a0"
              width={200}
              height={200}
              x="50%"
              y={-1}
              patternUnits="userSpaceOnUse"
            >
              <path d="M100 200V.5M.5 .5H200" fill="none" />
            </pattern>
          </defs>
          <svg x="50%" y={-1} className="overflow-visible fill-gray-50">
            <path
              d="M-100.5 0h201v201h-201Z M699.5 0h201v201h-201Z M499.5 400h201v201h-201Z M-300.5 600h201v201h-201Z"
              strokeWidth={0}
            />
          </svg>
          <rect
            width="100%"
            height="100%"
            strokeWidth={0}
            fill="url(#e813992c-7d03-4cc4-a2bd-151760b470a0)"
          />
        </svg>
      </div>

      <div className="mx-auto grid max-w-2xl grid-cols-1 gap-x-8 gap-y-16 lg:mx-0 lg:max-w-none lg:grid-cols-2 lg:items-start lg:gap-y-10">
        <div className="lg:col-span-2 lg:col-start-1 lg:row-start-1 lg:mx-auto lg:grid lg:w-full lg:max-w-6xl lg:grid-cols-2 lg:gap-x-8 lg:px-8">
          <div className="lg:pr-4">
            <div className="lg:max-w-lg">
              <p className="text-base font-semibold leading-7 bg-indigo-50 w-4/5 rounded-lg px-4 text-indigo-600">
                Questions & Answers Part
              </p>
              <h1 className="mt-2 text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl">
                A better workflow
              </h1>
              <p className="mt-6 my-3 md:text-3xl text-xl font-bold leading-8 text-gray-700">
                Uses Of{" "}
                <span className="text-blue-500 bg-blue-100 rounded-lg px-3">
                  react
                </span>
              </p>
            </div>
          </div>
        </div>
        <div className="-ml-12 -mt-12 p-12 lg:sticky lg:top-4 lg:col-start-2 lg:row-span-2 lg:row-start-1 lg:overflow-hidden">
          <img
            className="w-[48rem] max-w-none rounded-xl bg-gray-900 shadow-xl ring-1 ring-gray-400/10 sm:w-[57rem]"
            src="https://crowdbotics.ghost.io/content/images/2019/06/React-Event-Listeners.png"
            alt=""
          />
        </div>
        <div className="lg:col-span-2 lg:col-start-1 lg:row-start-2 lg:mx-auto lg:grid lg:w-full lg:max-w-5xl lg:grid-cols-2 lg:gap-x-8 lg:px-8">
          <div className="lg:pr-4">
            <div className="max-w-xl text-base leading-7 text-gray-700 lg:max-w-lg">
              <h2 className="mt-16 text-2xl font-bold tracking-tight text-gray-900">
                What is an access token and refresh token?
              </h2>
              <p className="mt-6">
                {" "}
                <span className="bg-blue-50 p-2 block text-xl font-bold rounded-lg w-3/5">
                  Access token
                </span>
                An access token is a credential used to authenticate and
                authorize access to a specific resource or API. It is typically
                a string of characters generated by an authentication server in
                response to a successful authentication request. The access
                token is then included in subsequent API requests as proof of
                authentication. It grants limited permissions and has an
                expiration time to ensure security.
              </p>
              <p className="mt-6">
                {" "}
                <span className="bg-blue-50 p-2 block text-xl font-bold rounded-lg w-3/5">
                  Refresh token
                </span>
                A refresh token, on the other hand, is also generated during the
                authentication process. It is a long-lived token that is used to
                obtain a new access token once the previous one expires. When an
                access token expires, the refresh token can be sent to the
                server to request a new access token without requiring the user
                to re-enter their credentials. Refresh tokens are generally more
                persistent and have a longer validity period compared to access
                tokens.
              </p>
              <img
                className=" my-3 rounded-lg"
                src="https://stytch.com/blog/wp-content/uploads/2022/01/How-a-refresh-token-is-generated-and-used-1.png"
                alt=""
              />
              <h2 className="mt-16 text-2xl font-bold tracking-tight text-gray-900">
                Compare SQL and NoSQL databases ??
              </h2>
              <p className="mt-6 bg-green-100 rounded-lg p-6">
                <ul className="list-decimal hover:list-disc">
                  <p className="">
                    <span className="font-bold">
                      {" "}
                      SQL and NoSQL databases :
                    </span>{" "}
                    SQL databases follow the ACID (Atomicity, Consistency,
                    Isolation, Durability) properties, while NoSQL databases may
                    sacrifice strict consistency or durability for higher
                    performance or scalability. SQL databases use the Structured
                    Query Language (SQL) for defining and manipulating data,
                    while NoSQL databases may have their own query languages or
                    support querying using programming languages or APIs.
                  </p>
                </ul>
                <img
                  className=" my-3 rounded-lg"
                  src="https://i.ytimg.com/vi/QwevGzVu_zk/maxresdefault.jpg"
                  alt=""
                />
              </p>
              <h2 className="mt-16 text-2xl font-bold tracking-tight text-gray-900">
                What is Express.js? What is Nest.js?
              </h2>
              <p className="mt-6">
                <span className="text-2xl font-bold mr-2">Express.js :</span>{" "}
                Express.js is a minimalist and flexible web application
                framework for Node.js. It provides a set of features and
                utilities for building web applications and APIs. Express.js
                allows developers to define routes, handle requests and
                responses, and manage middleware functions. It follows a simple
                and unopinionated approach, giving developers the freedom to
                structure their applications as they see fit. Express.js is
                known for its simplicity, speed, and extensive ecosystem of
                middleware and plugins.
              </p>
              <p className="mt-6">
                <span className="text-2xl font-bold mr-2">Nest.js :</span>{" "}
                Nest.js is a progressive and opinionated web framework for
                building scalable and maintainable server-side applications. It
                is built on top of Node.js and leverages TypeScript as its
                primary language. Nest.js combines elements from various
                frameworks and design patterns to provide a modular, scalable,
                and organized approach to application development. It offers
                features like dependency injection, decorators, modules, and an
                intuitive architecture inspired by Angular. Nest.js is designed
                to enable developers to create robust, enterprise-grade
                applications with ease.
              </p>
              <img
                className=" my-3 rounded-lg"
                src="https://cdn.sanity.io/images/ay6gmb6r/production/62448459577c97af6b9493a5dfd2008d262c4410-2240x1260.png"
                alt=""
              />
              <h2 className="mt-16 text-2xl font-bold tracking-tight text-gray-900">
                What is MongoDB aggregate and how does it work?
              </h2>
              <p className="mt-6">
                <span className="bg-blue-50 p-2 block text-xl font-bold rounded-lg w-3/5 ">
                  MongoDB:
                </span>{" "}
                In MongoDB, the aggregate method is used to perform advanced
                data processing and analysis operations on collections. It
                allows for the aggregation of data using a pipeline-based
                approach. The aggregate method takes an array of stages, where
                each stage defines a specific operation to be performed on the
                data.
              </p>
              <img
                className=" my-3 rounded-lg"
                src="https://webimages.mongodb.com/_com_assets/cms/kuzt9r42or1fxvlq2-Meta_Generic.png"
                alt=""
              />
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Blogs;
